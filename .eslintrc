{
  "env": { "es6": true, "node": true, "browser": true },
  "globals": {},
  "plugins": ["@typescript-eslint", "vue", "import", "prettier", "sonarjs"],
  "parser": "vue-eslint-parser",
  "parserOptions": {
    "parser": "@typescript-eslint/parser",
    "sourceType": "module",
    "project": "./tsconfig.json",
    "extraFileExtensions": [".vue"],
    "ecmaVersion": 2018,
    "ecmaFeatures": {
      "generators": false,
      "objectLiteralDuplicateProperties": false
    }
  },
  "rules": {
    "brace-style": ["off", "1tbs", { "allowSingleLine": true }],
    "@typescript-eslint/brace-style": [
      "error",
      "1tbs",
      { "allowSingleLine": true }
    ],
    "camelcase": [
      "off",
      {
        "properties": "never",
        "ignoreDestructuring": false,
        "ignoreImports": false,
        "ignoreGlobals": false
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      { "selector": "function", "format": ["camelCase", "PascalCase"] },
      { "selector": "typeLike", "format": ["PascalCase"] }
    ],
    "comma-dangle": [
      "off",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }
    ],
    "@typescript-eslint/comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline",
        "enums": "always-multiline",
        "generics": "always-multiline",
        "tuples": "always-multiline"
      }
    ],
    "comma-spacing": ["off", { "before": false, "after": true }],
    "@typescript-eslint/comma-spacing": [
      "error",
      { "before": false, "after": true }
    ],
    "default-param-last": ["off"],
    "@typescript-eslint/default-param-last": ["error"],
    "dot-notation": [
      "off",
      {
        "allowKeywords": true,
        "allowPattern": "",
        "allowPrivateClassPropertyAccess": false,
        "allowProtectedClassPropertyAccess": false,
        "allowIndexSignaturePropertyAccess": false
      }
    ],
    "@typescript-eslint/dot-notation": [
      "error",
      {
        "allowKeywords": true,
        "allowPattern": "",
        "allowPrivateClassPropertyAccess": false,
        "allowProtectedClassPropertyAccess": false,
        "allowIndexSignaturePropertyAccess": false
      }
    ],
    "func-call-spacing": ["off", "never"],
    "@typescript-eslint/func-call-spacing": ["error", "never"],
    "indent": [
      "off",
      2,
      {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "outerIIFEBody": 1,
        "FunctionDeclaration": { "parameters": 1, "body": 1 },
        "FunctionExpression": { "parameters": 1, "body": 1 },
        "CallExpression": { "arguments": 1 },
        "ArrayExpression": 1,
        "ObjectExpression": 1,
        "ImportDeclaration": 1,
        "flatTernaryExpressions": false,
        "ignoredNodes": [
          "JSXElement",
          "JSXElement > *",
          "JSXAttribute",
          "JSXIdentifier",
          "JSXNamespacedName",
          "JSXMemberExpression",
          "JSXSpreadAttribute",
          "JSXExpressionContainer",
          "JSXOpeningElement",
          "JSXClosingElement",
          "JSXFragment",
          "JSXOpeningFragment",
          "JSXClosingFragment",
          "JSXText",
          "JSXEmptyExpression",
          "JSXSpreadChild"
        ],
        "ignoreComments": false,
        "offsetTernaryExpressions": false
      }
    ],
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "outerIIFEBody": 1,
        "FunctionDeclaration": { "parameters": 1, "body": 1 },
        "FunctionExpression": { "parameters": 1, "body": 1 },
        "CallExpression": { "arguments": 1 },
        "ArrayExpression": 1,
        "ObjectExpression": 1,
        "ImportDeclaration": 1,
        "flatTernaryExpressions": false,
        "ignoredNodes": [
          "JSXElement",
          "JSXElement > *",
          "JSXAttribute",
          "JSXIdentifier",
          "JSXNamespacedName",
          "JSXMemberExpression",
          "JSXSpreadAttribute",
          "JSXExpressionContainer",
          "JSXOpeningElement",
          "JSXClosingElement",
          "JSXFragment",
          "JSXOpeningFragment",
          "JSXClosingFragment",
          "JSXText",
          "JSXEmptyExpression",
          "JSXSpreadChild"
        ],
        "ignoreComments": false,
        "offsetTernaryExpressions": false
      }
    ],
    "keyword-spacing": [
      "off",
      {
        "before": true,
        "after": true,
        "overrides": {
          "return": { "after": true },
          "throw": { "after": true },
          "case": { "after": true }
        }
      }
    ],
    "@typescript-eslint/keyword-spacing": [
      "error",
      {
        "before": true,
        "after": true,
        "overrides": {
          "return": { "after": true },
          "throw": { "after": true },
          "case": { "after": true }
        }
      }
    ],
    "lines-between-class-members": [
      "off",
      "always",
      { "exceptAfterSingleLine": false }
    ],
    "@typescript-eslint/lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": false }
    ],
    "no-array-constructor": ["off"],
    "@typescript-eslint/no-array-constructor": ["error"],
    "no-dupe-class-members": ["off"],
    "@typescript-eslint/no-dupe-class-members": ["error"],
    "no-empty-function": [
      "off",
      { "allow": ["arrowFunctions", "functions", "methods"] }
    ],
    "@typescript-eslint/no-empty-function": [
      "error",
      { "allow": ["arrowFunctions", "functions", "methods"] }
    ],
    "no-extra-parens": [
      "off",
      "all",
      {
        "conditionalAssign": true,
        "nestedBinaryExpressions": false,
        "returnAssign": false,
        "ignoreJSX": "all",
        "enforceForArrowConditionals": false
      }
    ],
    "@typescript-eslint/no-extra-parens": [
      "off",
      "all",
      {
        "conditionalAssign": true,
        "nestedBinaryExpressions": false,
        "returnAssign": false,
        "ignoreJSX": "all",
        "enforceForArrowConditionals": false
      }
    ],
    "no-extra-semi": ["off"],
    "@typescript-eslint/no-extra-semi": ["error"],
    "no-implied-eval": ["off"],
    "no-new-func": ["off"],
    "@typescript-eslint/no-implied-eval": ["error"],
    "no-loss-of-precision": ["off"],
    "@typescript-eslint/no-loss-of-precision": ["error"],
    "no-loop-func": ["off"],
    "@typescript-eslint/no-loop-func": ["error"],
    "no-magic-numbers": [
      "off",
      {
        "ignore": [],
        "ignoreArrayIndexes": true,
        "enforceConst": true,
        "detectObjects": false
      }
    ],
    "@typescript-eslint/no-magic-numbers": [
      "off",
      {
        "ignore": [],
        "ignoreArrayIndexes": true,
        "enforceConst": true,
        "detectObjects": false
      }
    ],
    "no-redeclare": ["off"],
    "@typescript-eslint/no-redeclare": ["error"],
    "no-shadow": ["off"],
    "@typescript-eslint/no-shadow": ["error"],
    "space-before-blocks": ["off"],
    "@typescript-eslint/space-before-blocks": ["error"],
    "no-throw-literal": ["off"],
    "@typescript-eslint/no-throw-literal": ["error"],
    "no-unused-expressions": [
      "off",
      {
        "allowShortCircuit": false,
        "allowTernary": false,
        "allowTaggedTemplates": false,
        "enforceForJSX": false
      }
    ],
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": false,
        "allowTernary": false,
        "allowTaggedTemplates": false,
        "enforceForJSX": false
      }
    ],
    "no-unused-vars": [
      "off",
      { "vars": "all", "args": "after-used", "ignoreRestSiblings": true }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "vars": "all", "args": "after-used", "ignoreRestSiblings": true }
    ],
    "no-use-before-define": [
      "off",
      { "functions": true, "classes": true, "variables": true }
    ],
    "@typescript-eslint/no-use-before-define": [
      "error",
      { "functions": true, "classes": true, "variables": true }
    ],
    "no-useless-constructor": ["off"],
    "@typescript-eslint/no-useless-constructor": ["error"],
    "quotes": ["off", "single", { "avoidEscape": true }],
    "@typescript-eslint/quotes": ["error", "single", { "avoidEscape": true }],
    "semi": ["off", "always"],
    "@typescript-eslint/semi": ["error", "always"],
    "space-before-function-paren": [
      "off",
      { "anonymous": "always", "named": "never", "asyncArrow": "always" }
    ],
    "@typescript-eslint/space-before-function-paren": [
      "error",
      { "anonymous": "always", "named": "never", "asyncArrow": "always" }
    ],
    "require-await": ["off"],
    "@typescript-eslint/require-await": ["off"],
    "no-return-await": ["off"],
    "@typescript-eslint/return-await": ["error", "in-try-catch"],
    "space-infix-ops": ["off"],
    "@typescript-eslint/space-infix-ops": ["error"],
    "object-curly-spacing": ["off", "always"],
    "@typescript-eslint/object-curly-spacing": ["error", "always"],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "mjs": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "test/**",
          "tests/**",
          "spec/**",
          "**/__tests__/**",
          "**/__mocks__/**",
          "test.{js,jsx}",
          "test.{ts,tsx}",
          "test-*.{js,jsx}",
          "test-*.{ts,tsx}",
          "**/*{.,_}{test,spec}.{js,jsx}",
          "**/*{.,_}{test,spec}.{ts,tsx}",
          "**/jest.config.js",
          "**/jest.config.ts",
          "**/jest.setup.js",
          "**/jest.setup.ts",
          "**/vue.config.js",
          "**/vue.config.ts",
          "**/webpack.config.js",
          "**/webpack.config.ts",
          "**/webpack.config.*.js",
          "**/webpack.config.*.ts",
          "**/rollup.config.js",
          "**/rollup.config.ts",
          "**/rollup.config.*.js",
          "**/rollup.config.*.ts",
          "**/gulpfile.js",
          "**/gulpfile.ts",
          "**/gulpfile.*.js",
          "**/gulpfile.*.ts",
          "**/Gruntfile{,.js}",
          "**/Gruntfile{,.ts}",
          "**/protractor.conf.js",
          "**/protractor.conf.ts",
          "**/protractor.conf.*.js",
          "**/protractor.conf.*.ts",
          "**/karma.conf.js",
          "**/karma.conf.ts",
          "**/.eslintrc.js",
          "**/.eslintrc.ts"
        ],
        "optionalDependencies": false
      }
    ],
    "no-warning-comments": ["warn", { "terms": ["TODO"], "location": "start" }],
    "complexity": ["warn", { "max": 10 }],
    "max-lines-per-function": [
      "warn",
      { "max": 100, "skipBlankLines": true, "skipComments": true }
    ],
    "max-lines": [
      "warn",
      { "max": 500, "skipBlankLines": true, "skipComments": true }
    ],
    "max-depth": ["warn", 5],
    "max-params": ["error", 5],
    "padding-line-between-statements": [
      "warn",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": "*", "next": "block-like" },
      { "blankLine": "always", "prev": "block-like", "next": "*" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      }
    ],
    "sonarjs/cognitive-complexity": ["off"],
    "sonarjs/elseif-without-else": ["off"],
    "sonarjs/max-switch-cases": ["error"],
    "sonarjs/no-all-duplicated-branches": ["error"],
    "sonarjs/no-collapsible-if": ["error"],
    "sonarjs/no-collection-size-mischeck": ["error"],
    "sonarjs/no-duplicate-string": ["error"],
    "sonarjs/no-duplicated-branches": ["error"],
    "sonarjs/no-element-overwrite": ["error"],
    "sonarjs/no-empty-collection": ["error"],
    "sonarjs/no-extra-arguments": ["error"],
    "sonarjs/no-gratuitous-expressions": ["error"],
    "sonarjs/no-identical-conditions": ["error"],
    "sonarjs/no-identical-expressions": ["error"],
    "sonarjs/no-identical-functions": ["error"],
    "sonarjs/no-ignored-return": ["error"],
    "sonarjs/no-inverted-boolean-check": ["off"],
    "sonarjs/no-nested-switch": ["error"],
    "sonarjs/no-nested-template-literals": ["error"],
    "sonarjs/no-one-iteration-loop": ["error"],
    "sonarjs/no-redundant-boolean": ["error"],
    "sonarjs/no-redundant-jump": ["error"],
    "sonarjs/no-same-line-conditional": ["error"],
    "sonarjs/no-small-switch": ["error"],
    "sonarjs/no-unused-collection": ["error"],
    "sonarjs/no-use-of-empty-return-value": ["error"],
    "sonarjs/no-useless-catch": ["error"],
    "sonarjs/non-existent-operator": ["error"],
    "sonarjs/prefer-immediate-return": ["error"],
    "sonarjs/prefer-object-literal": ["error"],
    "sonarjs/prefer-single-boolean-return": ["error"],
    "sonarjs/prefer-while": ["error"],
    "prettier/prettier": ["error"],
    "arrow-body-style": [
      "off",
      "as-needed",
      { "requireReturnForObjectLiteral": false }
    ],
    "prefer-arrow-callback": [
      "off",
      { "allowNamedFunctions": false, "allowUnboundThis": true }
    ],
    "curly": [0, "multi-line"],
    "lines-around-comment": [0],
    "max-len": [
      0,
      100,
      2,
      {
        "ignoreUrls": true,
        "ignoreComments": false,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "no-confusing-arrow": [
      0,
      { "allowParens": true, "onlyOneSimpleParam": false }
    ],
    "no-mixed-operators": [
      0,
      {
        "groups": [
          ["%", "**"],
          ["%", "+"],
          ["%", "-"],
          ["%", "*"],
          ["%", "/"],
          ["/", "*"],
          ["&", "|", "<<", ">>", ">>>"],
          ["==", "!=", "===", "!=="],
          ["&&", "||"]
        ],
        "allowSamePrecedence": false
      }
    ],
    "no-tabs": [0],
    "no-unexpected-multiline": [0],
    "babel/quotes": [0],
    "vue/html-self-closing": [0],
    "vue/max-len": [0],
    "array-bracket-newline": ["off", "consistent"],
    "array-bracket-spacing": ["off", "never"],
    "array-element-newline": ["off", { "multiline": true, "minItems": 3 }],
    "arrow-parens": ["off", "always"],
    "arrow-spacing": ["off", { "before": true, "after": true }],
    "block-spacing": ["off", "always"],
    "comma-style": [
      "off",
      "last",
      {
        "exceptions": {
          "ArrayExpression": false,
          "ArrayPattern": false,
          "ArrowFunctionExpression": false,
          "CallExpression": false,
          "FunctionDeclaration": false,
          "FunctionExpression": false,
          "ImportDeclaration": false,
          "ObjectExpression": false,
          "ObjectPattern": false,
          "VariableDeclaration": false,
          "NewExpression": false
        }
      }
    ],
    "computed-property-spacing": ["off", "never"],
    "dot-location": ["off", "property"],
    "eol-last": ["off", "always"],
    "function-call-argument-newline": ["off", "consistent"],
    "function-paren-newline": ["off", "multiline-arguments"],
    "generator-star": ["off"],
    "generator-star-spacing": ["off", { "before": false, "after": true }],
    "implicit-arrow-linebreak": ["off", "beside"],
    "jsx-quotes": ["off", "prefer-double"],
    "key-spacing": ["off", { "beforeColon": false, "afterColon": true }],
    "linebreak-style": ["off", "unix"],
    "multiline-ternary": ["off", "never"],
    "newline-per-chained-call": ["off", { "ignoreChainWithDepth": 4 }],
    "new-parens": ["off"],
    "no-arrow-condition": ["off"],
    "no-comma-dangle": ["off"],
    "no-floating-decimal": ["off"],
    "no-mixed-spaces-and-tabs": ["off"],
    "no-multi-spaces": ["off", { "ignoreEOLComments": false }],
    "no-multiple-empty-lines": ["off", { "max": 1, "maxBOF": 0, "maxEOF": 0 }],
    "no-reserved-keys": ["off"],
    "no-space-before-semi": ["off"],
    "no-trailing-spaces": [
      "off",
      { "skipBlankLines": false, "ignoreComments": false }
    ],
    "no-whitespace-before-property": ["off"],
    "no-wrap-func": ["off"],
    "nonblock-statement-body-position": ["off", "beside", { "overrides": {} }],
    "object-curly-newline": [
      "off",
      {
        "ObjectExpression": {
          "minProperties": 4,
          "multiline": true,
          "consistent": true
        },
        "ObjectPattern": {
          "minProperties": 4,
          "multiline": true,
          "consistent": true
        },
        "ImportDeclaration": {
          "minProperties": 4,
          "multiline": true,
          "consistent": true
        },
        "ExportDeclaration": {
          "minProperties": 4,
          "multiline": true,
          "consistent": true
        }
      }
    ],
    "object-property-newline": [
      "off",
      {
        "allowAllPropertiesOnSameLine": true,
        "allowMultiplePropertiesPerLine": false
      }
    ],
    "one-var-declaration-per-line": ["off", "always"],
    "operator-linebreak": ["off", "before", { "overrides": { "=": "none" } }],
    "padded-blocks": [
      "off",
      { "blocks": "never", "classes": "never", "switches": "never" },
      { "allowSingleLineBlocks": true }
    ],
    "quote-props": [
      "off",
      "as-needed",
      { "keywords": false, "unnecessary": true, "numbers": false }
    ],
    "rest-spread-spacing": ["off", "never"],
    "semi-spacing": ["off", { "before": false, "after": true }],
    "semi-style": ["off", "last"],
    "space-after-function-name": ["off"],
    "space-after-keywords": ["off"],
    "space-before-function-parentheses": ["off"],
    "space-before-keywords": ["off"],
    "space-in-brackets": ["off"],
    "space-in-parens": ["off", "never"],
    "space-return-throw-case": ["off"],
    "space-unary-ops": [
      "off",
      { "words": true, "nonwords": false, "overrides": {} }
    ],
    "space-unary-word-ops": ["off"],
    "switch-colon-spacing": ["off", { "after": true, "before": false }],
    "template-curly-spacing": ["off"],
    "template-tag-spacing": ["off", "never"],
    "unicode-bom": ["off", "never"],
    "wrap-iife": ["off", "outside", { "functionPrototypeMethods": false }],
    "wrap-regex": ["off"],
    "yield-star-spacing": ["off", "after"],
    "@babel/object-curly-spacing": ["off"],
    "@babel/semi": ["off"],
    "@typescript-eslint/member-delimiter-style": ["off"],
    "@typescript-eslint/type-annotation-spacing": ["off"],
    "babel/object-curly-spacing": ["off"],
    "babel/semi": ["off"],
    "flowtype/boolean-style": ["off"],
    "flowtype/delimiter-dangle": ["off"],
    "flowtype/generic-spacing": ["off"],
    "flowtype/object-type-curly-spacing": ["off"],
    "flowtype/object-type-delimiter": ["off"],
    "flowtype/quotes": ["off"],
    "flowtype/semi": ["off"],
    "flowtype/space-after-type-colon": ["off"],
    "flowtype/space-before-generic-bracket": ["off"],
    "flowtype/space-before-type-colon": ["off"],
    "flowtype/union-intersection-spacing": ["off"],
    "react/jsx-child-element-spacing": ["off"],
    "react/jsx-closing-bracket-location": ["off"],
    "react/jsx-closing-tag-location": ["off"],
    "react/jsx-curly-newline": ["off"],
    "react/jsx-curly-spacing": ["off"],
    "react/jsx-equals-spacing": ["off"],
    "react/jsx-first-prop-new-line": ["off"],
    "react/jsx-indent": ["off"],
    "react/jsx-indent-props": ["off"],
    "react/jsx-max-props-per-line": ["off"],
    "react/jsx-newline": ["off"],
    "react/jsx-one-expression-per-line": ["off"],
    "react/jsx-props-no-multi-spaces": ["off"],
    "react/jsx-tag-spacing": ["off"],
    "react/jsx-wrap-multilines": ["off"],
    "standard/array-bracket-even-spacing": ["off"],
    "standard/computed-property-even-spacing": ["off"],
    "standard/object-curly-even-spacing": ["off"],
    "unicorn/empty-brace-spaces": ["off"],
    "unicorn/no-nested-ternary": ["off"],
    "unicorn/number-literal-case": ["off"],
    "vue/array-bracket-newline": ["off"],
    "vue/array-bracket-spacing": ["off"],
    "vue/arrow-spacing": ["off"],
    "vue/block-spacing": ["off"],
    "vue/block-tag-newline": ["off"],
    "vue/brace-style": ["off"],
    "vue/comma-dangle": ["off"],
    "vue/comma-spacing": ["off"],
    "vue/comma-style": ["off"],
    "vue/dot-location": ["off"],
    "vue/func-call-spacing": ["off"],
    "vue/html-closing-bracket-newline": ["off"],
    "vue/html-closing-bracket-spacing": ["off"],
    "vue/html-end-tags": ["off"],
    "vue/html-indent": ["off"],
    "vue/html-quotes": ["off"],
    "vue/key-spacing": ["off"],
    "vue/keyword-spacing": ["off"],
    "vue/max-attributes-per-line": ["off"],
    "vue/multiline-html-element-content-newline": ["off"],
    "vue/mustache-interpolation-spacing": ["off"],
    "vue/no-extra-parens": ["off"],
    "vue/no-multi-spaces": ["off"],
    "vue/no-spaces-around-equal-signs-in-attribute": ["off"],
    "vue/object-curly-newline": ["off"],
    "vue/object-curly-spacing": ["off"],
    "vue/object-property-newline": ["off"],
    "vue/operator-linebreak": ["off"],
    "vue/quote-props": ["off"],
    "vue/script-indent": ["off"],
    "vue/singleline-html-element-content-newline": ["off"],
    "vue/space-in-parens": ["off"],
    "vue/space-infix-ops": ["off"],
    "vue/space-unary-ops": ["off"],
    "vue/template-curly-spacing": ["off"],
    "indent-legacy": ["off"],
    "no-spaced-func": ["off"],
    "react/jsx-space-before-closing": ["off"],
    "strict": ["error", "never"],
    "import/no-unresolved": [
      "error",
      { "commonjs": true, "caseSensitive": true, "caseSensitiveStrict": false }
    ],
    "import/named": ["error"],
    "import/default": ["off"],
    "import/namespace": ["off"],
    "import/export": ["error"],
    "import/no-named-as-default": ["error"],
    "import/no-named-as-default-member": ["error"],
    "import/no-deprecated": ["off"],
    "import/no-mutable-exports": ["error"],
    "import/no-commonjs": ["off"],
    "import/no-amd": ["error"],
    "import/no-nodejs-modules": ["off"],
    "import/first": ["error"],
    "import/imports-first": ["off"],
    "import/no-duplicates": ["error"],
    "import/no-namespace": ["off"],
    "import/order": [
      "error",
      {
        "groups": [["builtin", "external", "internal"]],
        "warnOnUnassignedImports": false
      }
    ],
    "import/newline-after-import": ["error"],
    "import/prefer-default-export": ["error"],
    "import/no-restricted-paths": ["off"],
    "import/max-dependencies": ["off", { "max": 10 }],
    "import/no-absolute-path": ["error"],
    "import/no-dynamic-require": ["error"],
    "import/no-internal-modules": ["off", { "allow": [] }],
    "import/unambiguous": ["off"],
    "import/no-webpack-loader-syntax": ["error"],
    "import/no-unassigned-import": ["off"],
    "import/no-named-default": ["error"],
    "import/no-anonymous-default-export": [
      "off",
      {
        "allowArray": false,
        "allowArrowFunction": false,
        "allowAnonymousClass": false,
        "allowAnonymousFunction": false,
        "allowLiteral": false,
        "allowObject": false
      }
    ],
    "import/exports-last": ["off"],
    "import/group-exports": ["off"],
    "import/no-default-export": ["off"],
    "import/no-named-export": ["off"],
    "import/no-self-import": ["error"],
    "import/no-cycle": ["error", { "maxDepth": "∞", "ignoreExternal": false }],
    "import/no-useless-path-segments": ["error", { "commonjs": true }],
    "import/dynamic-import-chunkname": [
      "off",
      { "importFunctions": [], "webpackChunknameFormat": "[0-9a-zA-Z-_/.]+" }
    ],
    "import/no-relative-parent-imports": ["off"],
    "import/no-unused-modules": [
      "off",
      { "ignoreExports": [], "missingExports": true, "unusedExports": true }
    ],
    "import/no-import-module-exports": ["error", { "exceptions": [] }],
    "import/no-relative-packages": ["error"],
    "constructor-super": ["error"],
    "no-class-assign": ["error"],
    "no-const-assign": ["error"],
    "no-duplicate-imports": ["off"],
    "no-new-symbol": ["error"],
    "no-restricted-exports": [
      "error",
      { "restrictedNamedExports": ["default", "then"] }
    ],
    "no-restricted-imports": ["off", { "paths": [], "patterns": [] }],
    "no-this-before-super": ["error"],
    "no-useless-computed-key": ["error"],
    "no-useless-rename": [
      "error",
      {
        "ignoreDestructuring": false,
        "ignoreImport": false,
        "ignoreExport": false
      }
    ],
    "no-var": ["error"],
    "object-shorthand": [
      "error",
      "always",
      { "ignoreConstructors": false, "avoidQuotes": true }
    ],
    "prefer-const": [
      "error",
      { "destructuring": "any", "ignoreReadBeforeAssign": true }
    ],
    "prefer-destructuring": [
      "error",
      {
        "VariableDeclarator": { "array": false, "object": true },
        "AssignmentExpression": { "array": true, "object": false }
      },
      { "enforceForRenamedProperties": false }
    ],
    "prefer-numeric-literals": ["error"],
    "prefer-reflect": ["off"],
    "prefer-rest-params": ["error"],
    "prefer-spread": ["error"],
    "prefer-template": ["error"],
    "require-yield": ["error"],
    "sort-imports": [
      "off",
      {
        "ignoreCase": false,
        "ignoreDeclarationSort": false,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": ["none", "all", "multiple", "single"]
      }
    ],
    "symbol-description": ["error"],
    "init-declarations": ["off"],
    "no-catch-shadow": ["off"],
    "no-delete-var": ["error"],
    "no-label-var": ["error"],
    "no-restricted-globals": [
      "error",
      {
        "name": "isFinite",
        "message": "Use Number.isFinite instead https://github.com/airbnb/javascript#standard-library--isfinite"
      },
      {
        "name": "isNaN",
        "message": "Use Number.isNaN instead https://github.com/airbnb/javascript#standard-library--isnan"
      },
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "defaultstatus",
      "event",
      "external",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top"
    ],
    "no-shadow-restricted-names": ["error"],
    "no-undef": ["error"],
    "no-undef-init": ["error"],
    "no-undefined": ["off"],
    "capitalized-comments": [
      "off",
      "never",
      {
        "line": {
          "ignorePattern": ".*",
          "ignoreInlineComments": true,
          "ignoreConsecutiveComments": true
        },
        "block": {
          "ignorePattern": ".*",
          "ignoreInlineComments": true,
          "ignoreConsecutiveComments": true
        }
      }
    ],
    "consistent-this": ["off"],
    "func-name-matching": [
      "off",
      "always",
      {
        "includeCommonJSModuleExports": false,
        "considerPropertyDescriptor": true
      }
    ],
    "func-names": ["warn"],
    "func-style": ["off", "expression"],
    "id-denylist": ["off"],
    "id-length": ["off"],
    "id-match": ["off"],
    "line-comment-position": [
      "off",
      { "position": "above", "ignorePattern": "", "applyDefaultPatterns": true }
    ],
    "lines-around-directive": [
      "error",
      { "before": "always", "after": "always" }
    ],
    "max-nested-callbacks": ["off"],
    "max-statements": ["off", 10],
    "max-statements-per-line": ["off", { "max": 1 }],
    "multiline-comment-style": ["off", "starred-block"],
    "new-cap": [
      "error",
      {
        "newIsCap": true,
        "newIsCapExceptions": [],
        "capIsNew": false,
        "capIsNewExceptions": [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List"
        ],
        "properties": true
      }
    ],
    "newline-after-var": ["off"],
    "newline-before-return": ["off"],
    "no-bitwise": ["error"],
    "no-continue": ["error"],
    "no-inline-comments": ["off"],
    "no-lonely-if": ["error"],
    "no-multi-assign": ["error"],
    "no-negated-condition": ["off"],
    "no-nested-ternary": ["error"],
    "no-new-object": ["error"],
    "no-plusplus": ["error"],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "ForOfStatement",
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-ternary": ["off"],
    "no-underscore-dangle": [
      "error",
      {
        "allow": [],
        "allowAfterThis": false,
        "allowAfterSuper": false,
        "enforceInMethodNames": true,
        "allowAfterThisConstructor": false,
        "allowFunctionParams": true,
        "enforceInClassFields": false
      }
    ],
    "no-unneeded-ternary": ["error", { "defaultAssignment": false }],
    "one-var": ["error", "never"],
    "operator-assignment": ["error", "always"],
    "prefer-exponentiation-operator": ["error"],
    "prefer-object-spread": ["error"],
    "require-jsdoc": ["off"],
    "sort-keys": ["off", "asc", { "caseSensitive": false, "natural": true }],
    "sort-vars": ["off"],
    "spaced-comment": [
      "error",
      "always",
      {
        "line": { "exceptions": ["-", "+"], "markers": ["=", "!", "/"] },
        "block": {
          "exceptions": ["-", "+"],
          "markers": ["=", "!", ":", "::"],
          "balanced": true
        }
      }
    ],
    "callback-return": ["off"],
    "global-require": ["error"],
    "handle-callback-err": ["off"],
    "no-buffer-constructor": ["error"],
    "no-mixed-requires": ["off", false],
    "no-new-require": ["error"],
    "no-path-concat": ["error"],
    "no-process-env": ["off"],
    "no-process-exit": ["off"],
    "no-restricted-modules": ["off"],
    "no-sync": ["off"],
    "for-direction": ["error"],
    "getter-return": ["error", { "allowImplicit": true }],
    "no-async-promise-executor": ["error"],
    "no-await-in-loop": ["error"],
    "no-compare-neg-zero": ["error"],
    "no-cond-assign": ["error", "always"],
    "no-console": ["warn"],
    "no-constant-condition": ["warn"],
    "no-control-regex": ["error"],
    "no-debugger": ["error"],
    "no-dupe-args": ["error"],
    "no-dupe-else-if": ["error"],
    "no-dupe-keys": ["error"],
    "no-duplicate-case": ["error"],
    "no-empty": ["error"],
    "no-empty-character-class": ["error"],
    "no-ex-assign": ["error"],
    "no-extra-boolean-cast": ["error"],
    "no-func-assign": ["error"],
    "no-import-assign": ["error"],
    "no-inner-declarations": ["error"],
    "no-invalid-regexp": ["error"],
    "no-irregular-whitespace": ["error"],
    "no-misleading-character-class": ["error"],
    "no-obj-calls": ["error"],
    "no-promise-executor-return": ["error"],
    "no-prototype-builtins": ["error"],
    "no-regex-spaces": ["error"],
    "no-setter-return": ["error"],
    "no-sparse-arrays": ["error"],
    "no-template-curly-in-string": ["error"],
    "no-unreachable": ["error"],
    "no-unreachable-loop": ["error", { "ignore": [] }],
    "no-unsafe-finally": ["error"],
    "no-unsafe-negation": ["error"],
    "no-unsafe-optional-chaining": [
      "error",
      { "disallowArithmeticOperators": true }
    ],
    "no-unused-private-class-members": ["off"],
    "no-useless-backreference": ["error"],
    "no-negated-in-lhs": ["off"],
    "require-atomic-updates": ["off"],
    "use-isnan": ["error"],
    "valid-jsdoc": ["off"],
    "valid-typeof": ["error", { "requireStringLiterals": true }],
    "accessor-pairs": ["off"],
    "array-callback-return": [
      "error",
      { "allowImplicit": true, "checkForEach": false }
    ],
    "block-scoped-var": ["error"],
    "class-methods-use-this": [
      "error",
      { "exceptMethods": [], "enforceForClassFields": true }
    ],
    "consistent-return": ["error"],
    "default-case": ["error", { "commentPattern": "^no default$" }],
    "default-case-last": ["error"],
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "grouped-accessor-pairs": ["error"],
    "guard-for-in": ["error"],
    "max-classes-per-file": ["error", 1],
    "no-alert": ["warn"],
    "no-caller": ["error"],
    "no-case-declarations": ["error"],
    "no-constructor-return": ["error"],
    "no-div-regex": ["off"],
    "no-else-return": ["error", { "allowElseIf": false }],
    "no-empty-pattern": ["error"],
    "no-eq-null": ["off"],
    "no-eval": ["error"],
    "no-extend-native": ["error"],
    "no-extra-bind": ["error"],
    "no-extra-label": ["error"],
    "no-fallthrough": ["error"],
    "no-global-assign": ["error", { "exceptions": [] }],
    "no-native-reassign": ["off"],
    "no-implicit-coercion": [
      "off",
      { "boolean": false, "number": true, "string": true, "allow": [] }
    ],
    "no-implicit-globals": ["off"],
    "no-invalid-this": ["off"],
    "no-iterator": ["error"],
    "no-labels": ["error", { "allowLoop": false, "allowSwitch": false }],
    "no-lone-blocks": ["error"],
    "no-multi-str": ["error"],
    "no-new": ["error"],
    "no-new-wrappers": ["error"],
    "no-nonoctal-decimal-escape": ["error"],
    "no-octal": ["error"],
    "no-octal-escape": ["error"],
    "no-param-reassign": [
      "error",
      {
        "props": true,
        "ignorePropertyModificationsFor": [
          "acc",
          "accumulator",
          "e",
          "ctx",
          "context",
          "req",
          "request",
          "res",
          "response",
          "$scope",
          "staticContext"
        ]
      }
    ],
    "no-proto": ["error"],
    "no-restricted-properties": [
      "error",
      {
        "object": "arguments",
        "property": "callee",
        "message": "arguments.callee is deprecated"
      },
      {
        "object": "global",
        "property": "isFinite",
        "message": "Please use Number.isFinite instead"
      },
      {
        "object": "self",
        "property": "isFinite",
        "message": "Please use Number.isFinite instead"
      },
      {
        "object": "window",
        "property": "isFinite",
        "message": "Please use Number.isFinite instead"
      },
      {
        "object": "global",
        "property": "isNaN",
        "message": "Please use Number.isNaN instead"
      },
      {
        "object": "self",
        "property": "isNaN",
        "message": "Please use Number.isNaN instead"
      },
      {
        "object": "window",
        "property": "isNaN",
        "message": "Please use Number.isNaN instead"
      },
      {
        "property": "__defineGetter__",
        "message": "Please use Object.defineProperty instead."
      },
      {
        "property": "__defineSetter__",
        "message": "Please use Object.defineProperty instead."
      },
      {
        "object": "Math",
        "property": "pow",
        "message": "Use the exponentiation operator (**) instead."
      }
    ],
    "no-return-assign": ["error", "always"],
    "no-script-url": ["error"],
    "no-self-assign": ["error", { "props": true }],
    "no-self-compare": ["error"],
    "no-sequences": ["error"],
    "no-unmodified-loop-condition": ["off"],
    "no-unused-labels": ["error"],
    "no-useless-call": ["off"],
    "no-useless-catch": ["error"],
    "no-useless-concat": ["error"],
    "no-useless-escape": ["error"],
    "no-useless-return": ["error"],
    "no-void": ["error"],
    "no-with": ["error"],
    "prefer-promise-reject-errors": ["error", { "allowEmptyReject": true }],
    "prefer-named-capture-group": ["off"],
    "prefer-regex-literals": ["error", { "disallowRedundantWrapping": true }],
    "radix": ["error"],
    "require-unicode-regexp": ["off"],
    "vars-on-top": ["error"],
    "yoda": ["error"],
    "vue/attributes-order": ["warn"],
    "vue/component-tags-order": ["warn"],
    "vue/no-lone-template": ["warn"],
    "vue/no-multiple-slot-args": ["warn"],
    "vue/no-v-html": ["warn"],
    "vue/order-in-components": ["warn"],
    "vue/this-in-template": ["warn"],
    "vue/attribute-hyphenation": ["warn"],
    "vue/component-definition-name-casing": ["warn"],
    "vue/first-attribute-linebreak": ["warn"],
    "vue/no-template-shadow": ["warn"],
    "vue/one-component-per-file": ["warn"],
    "vue/prop-name-casing": ["warn"],
    "vue/require-default-prop": ["warn"],
    "vue/require-prop-types": ["warn"],
    "vue/v-bind-style": ["warn"],
    "vue/v-on-style": ["warn"],
    "vue/v-slot-style": ["warn"],
    "vue/multi-word-component-names": ["error"],
    "vue/no-arrow-functions-in-watch": ["error"],
    "vue/no-async-in-computed-properties": ["error"],
    "vue/no-child-content": ["error"],
    "vue/no-computed-properties-in-data": ["error"],
    "vue/no-custom-modifiers-on-v-model": ["error"],
    "vue/no-dupe-keys": ["error"],
    "vue/no-dupe-v-else-if": ["error"],
    "vue/no-duplicate-attributes": ["error"],
    "vue/no-export-in-script-setup": ["error"],
    "vue/no-multiple-template-root": ["error"],
    "vue/no-mutating-props": ["error"],
    "vue/no-parsing-error": ["error"],
    "vue/no-ref-as-operand": ["error"],
    "vue/no-reserved-component-names": ["error"],
    "vue/no-reserved-keys": ["error"],
    "vue/no-reserved-props": ["error", { "vueVersion": 2 }],
    "vue/no-setup-props-destructure": ["error"],
    "vue/no-shared-component-data": ["error"],
    "vue/no-side-effects-in-computed-properties": ["error"],
    "vue/no-template-key": ["error"],
    "vue/no-textarea-mustache": ["error"],
    "vue/no-unused-components": ["error"],
    "vue/no-unused-vars": ["error"],
    "vue/no-use-computed-property-like-method": ["error"],
    "vue/no-use-v-if-with-v-for": ["error"],
    "vue/no-useless-template-attributes": ["error"],
    "vue/no-v-for-template-key": ["error"],
    "vue/no-v-model-argument": ["error"],
    "vue/no-v-text-v-html-on-component": ["error"],
    "vue/require-component-is": ["error"],
    "vue/require-prop-type-constructor": ["error"],
    "vue/require-render-return": ["error"],
    "vue/require-v-for-key": ["error"],
    "vue/require-valid-default-prop": ["error"],
    "vue/return-in-computed-property": ["error"],
    "vue/return-in-emits-validator": ["error"],
    "vue/use-v-on-exact": ["error"],
    "vue/valid-attribute-name": ["error"],
    "vue/valid-define-emits": ["error"],
    "vue/valid-define-props": ["error"],
    "vue/valid-model-definition": ["error"],
    "vue/valid-next-tick": ["error"],
    "vue/valid-template-root": ["error"],
    "vue/valid-v-bind-sync": ["error"],
    "vue/valid-v-bind": ["error"],
    "vue/valid-v-cloak": ["error"],
    "vue/valid-v-else-if": ["error"],
    "vue/valid-v-else": ["error"],
    "vue/valid-v-for": ["error"],
    "vue/valid-v-html": ["error"],
    "vue/valid-v-if": ["error"],
    "vue/valid-v-model": ["error"],
    "vue/valid-v-on": ["error"],
    "vue/valid-v-once": ["error"],
    "vue/valid-v-pre": ["error"],
    "vue/valid-v-show": ["error"],
    "vue/valid-v-slot": ["error"],
    "vue/valid-v-text": ["error"],
    "vue/comment-directive": ["error"],
    "vue/jsx-uses-vars": ["error"],
    "vue/require-explicit-emits": ["warn"],
    "vue/v-on-event-hyphenation": ["warn"],
    "vue/no-deprecated-data-object-declaration": ["error"],
    "vue/no-deprecated-destroyed-lifecycle": ["error"],
    "vue/no-deprecated-dollar-listeners-api": ["error"],
    "vue/no-deprecated-dollar-scopedslots-api": ["error"],
    "vue/no-deprecated-events-api": ["error"],
    "vue/no-deprecated-filter": ["error"],
    "vue/no-deprecated-functional-template": ["error"],
    "vue/no-deprecated-html-element-is": ["error"],
    "vue/no-deprecated-inline-template": ["error"],
    "vue/no-deprecated-props-default-this": ["error"],
    "vue/no-deprecated-router-link-tag-prop": ["error"],
    "vue/no-deprecated-scope-attribute": ["error"],
    "vue/no-deprecated-slot-attribute": ["error"],
    "vue/no-deprecated-slot-scope-attribute": ["error"],
    "vue/no-deprecated-v-bind-sync": ["error"],
    "vue/no-deprecated-v-is": ["error"],
    "vue/no-deprecated-v-on-native-modifier": ["error"],
    "vue/no-deprecated-v-on-number-modifiers": ["error"],
    "vue/no-deprecated-vue-config-keycodes": ["error"],
    "vue/no-expose-after-await": ["error"],
    "vue/no-lifecycle-after-await": ["error"],
    "vue/no-v-for-template-key-on-child": ["error"],
    "vue/no-watch-after-await": ["error"],
    "vue/prefer-import-from-vue": ["error"],
    "vue/require-slots-as-functions": ["error"],
    "vue/require-toggle-inside-transition": ["error"],
    "vue/valid-v-is": ["error"],
    "vue/valid-v-memo": ["error"]
  },
  "settings": {
    "import/parsers": { "@typescript-eslint/parser": [".ts", ".tsx", ".d.ts"] },
    "import/resolver": {
      "node": { "extensions": [".mjs", ".js", ".json", ".ts", ".d.ts"] }
    },
    "import/extensions": [".js", ".mjs", ".jsx", ".ts", ".tsx", ".d.ts"],
    "import/external-module-folders": ["node_modules", "node_modules/@types"],
    "import/core-modules": [],
    "import/ignore": ["node_modules", "\\.(coffee|scss|css|less|hbs|svg|json)$"]
  },
  "ignorePatterns": []
}
